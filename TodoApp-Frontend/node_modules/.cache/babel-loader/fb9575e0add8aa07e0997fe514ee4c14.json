{"ast":null,"code":"var _jsxFileName = \"/Users/karolpetka/Desktop/todo-app-frontend/todo-app-frontend/src/components/Todo.js\";\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = _ref => {\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/React.createElement(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return; // return todos.map((todo, index) => (\n  //   <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\n  //     <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n  //       {todo.text}\n  //     </div>\n  //     <div className='icons'>\n  //       <RiCloseCircleLine\n  //         onClick={() => removeTodo(todo.id)}\n  //         className='delete-icon'\n  //       />\n  //       <TiEdit\n  //         onClick={() => setEdit({ id: todo.id, value: todo.text })}\n  //         className='edit-icon'\n  //       />\n  //     </div>\n  //   </div>\n  // ));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/karolpetka/Desktop/todo-app-frontend/todo-app-frontend/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,MAAMC,IAAI,GAAG,QAAqD;AAAA,MAApD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA;AAAnC,GAAoD;AAEhE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC/BW,IAAAA,EAAE,EAAE,IAD2B;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC5BJ,IAAAA,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACNC,MAAAA,EAAE,EAAE,IADE;AAENC,MAAAA,KAAK,EAAE;AAFD,KAAD,CAAP;AAID,GAND;;AAQA,MAAIH,IAAI,CAACE,EAAT,EAAa;AACX,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,QAAQ,EAAEI,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAnBgE,CAqBhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAtCD;;AAwCA,eAAeT,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return\n\n  // return todos.map((todo, index) => (\n  //   <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\n  //     <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n  //       {todo.text}\n  //     </div>\n  //     <div className='icons'>\n  //       <RiCloseCircleLine\n  //         onClick={() => removeTodo(todo.id)}\n  //         className='delete-icon'\n  //       />\n  //       <TiEdit\n  //         onClick={() => setEdit({ id: todo.id, value: todo.text })}\n  //         className='edit-icon'\n  //       />\n  //     </div>\n  //   </div>\n  // ));\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}