{"ast":null,"code":"var _jsxFileName = \"/Users/karolpetka/Desktop/Lab5_WebApi/TodoApp/TodoApp-Frontend/src/components/TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport axios from 'axios';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [content, setContent] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:4300/api/todo').then(res => {\n      setContent(res.data);\n    });\n  }, []);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    axios.post('http://localhost:4300/api/todo/' + todo.id + \"/\" + todo.text);\n    window.location.reload();\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    axios.put('http://localhost:4300/api/todo/' + todoId + \"/\" + newValue.text);\n    window.location.reload();\n  };\n\n  const removeTodo = id => {\n    axios.delete('http://localhost:4300/api/todo/' + id);\n    window.location.reload();\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"App that helps YOU ToDo more!\"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/karolpetka/Desktop/Lab5_WebApi/TodoApp/TodoApp-Frontend/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","Todo","axios","TodoList","todos","setTodos","content","setContent","get","then","res","data","addTodo","todo","text","test","post","id","window","location","reload","updateTodo","todoId","newValue","put","removeTodo","delete","completeTodo","updatedTodos","map","isComplete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFM,GADH,CACO,gCADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXH,MAAAA,UAAU,CAACG,GAAG,CAACC,IAAL,CAAV;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,OAAO,GAAGC,IAAI,IAAI;AACtB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AAEDZ,IAAAA,KAAK,CAACc,IAAN,CAAW,oCAAoCH,IAAI,CAACI,EAAzC,GAA8C,GAA9C,GAAoDJ,IAAI,CAACC,IAApE;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAPD;;AASA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACT,IAAV,IAAkB,QAAQC,IAAR,CAAaQ,QAAQ,CAACT,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDZ,IAAAA,KAAK,CAACsB,GAAN,CAAU,oCAAoCF,MAApC,GAA6C,GAA7C,GAAmDC,QAAQ,CAACT,IAAtE;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAPD;;AASA,QAAMK,UAAU,GAAGR,EAAE,IAAI;AACvBf,IAAAA,KAAK,CAACwB,MAAN,CAAa,oCAAoCT,EAAjD;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAHD;;AAKA,QAAMO,YAAY,GAAGV,EAAE,IAAI;AACzB,QAAIW,YAAY,GAAGxB,KAAK,CAACyB,GAAN,CAAUhB,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACI,EAAL,KAAYA,EAAhB,EAAoB;AAClBJ,QAAAA,IAAI,CAACiB,UAAL,GAAkB,CAACjB,IAAI,CAACiB,UAAxB;AACD;;AACD,aAAOjB,IAAP;AACD,KALkB,CAAnB;AAMAR,IAAAA,QAAQ,CAACuB,YAAD,CAAR;AACD,GARD;;AAUA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEhB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAER,KADT;AAEE,IAAA,YAAY,EAAEuB,YAFhB;AAGE,IAAA,UAAU,EAAEF,UAHd;AAIE,IAAA,UAAU,EAAEJ,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAYD;;AAED,eAAelB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nimport axios from 'axios';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const [content, setContent] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:4300/api/todo')\n      .then(res => {\n        setContent(res.data);\n      })\n  }, [])\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    \n    axios.post('http://localhost:4300/api/todo/' + todo.id + \"/\" + todo.text);\n    window.location.reload();\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    axios.put('http://localhost:4300/api/todo/' + todoId + \"/\" + newValue.text);\n    window.location.reload();\n  };\n\n  const removeTodo = id => {\n    axios.delete('http://localhost:4300/api/todo/' + id);\n    window.location.reload();\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1>App that helps YOU ToDo more!</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}