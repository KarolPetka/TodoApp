{"ast":null,"code":"var _jsxFileName = \"/Users/karolpetka/Desktop/todo-app-frontend/todo-app-frontend/src/components/TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [content, setContent] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:4300/api/todo').then(res => {\n      setContent(res.data);\n      console.log(res.data);\n    });\n  }, []);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"What's the Plan for Today?\"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    key: content.id,\n    onClick: () => completeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, content.description), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/karolpetka/Desktop/todo-app-frontend/todo-app-frontend/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoForm","Todo","TodoList","todos","setTodos","content","setContent","axios","get","then","res","data","console","log","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CACFC,GADH,CACO,gCADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXJ,MAAAA,UAAU,CAACI,GAAG,CAACC,IAAL,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMG,OAAO,GAAGC,IAAI,IAAI;AACtB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGZ,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACc,QAAD,CAAR;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGV,KAAf;AACD,GATD;;AAWA,QAAMgB,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDZ,IAAAA,QAAQ,CAACkB,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAAlD,CAAT,CAAR;AACD,GAND;;AAQA,QAAME,UAAU,GAAGD,EAAE,IAAI;AACvB,UAAME,UAAU,GAAG,CAAC,GAAGxB,KAAJ,EAAWyB,MAAX,CAAkBb,IAAI,IAAIA,IAAI,CAACU,EAAL,KAAYA,EAAtC,CAAnB;AAEArB,IAAAA,QAAQ,CAACuB,UAAD,CAAR;AACD,GAJD;;AAMA,QAAME,YAAY,GAAGJ,EAAE,IAAI;AACzB,QAAIK,YAAY,GAAG3B,KAAK,CAACoB,GAAN,CAAUR,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACU,EAAL,KAAYA,EAAhB,EAAoB;AAClBV,QAAAA,IAAI,CAACgB,UAAL,GAAkB,CAAChB,IAAI,CAACgB,UAAxB;AACD;;AACD,aAAOhB,IAAP;AACD,KALkB,CAAnB;AAMAX,IAAAA,QAAQ,CAAC0B,YAAD,CAAR;AACD,GARD;;AAUA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEhB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,GAAG,EAAET,OAAO,CAACoB,EAAlB;AAAsB,IAAA,OAAO,EAAE,MAAMI,YAAY,CAACd,IAAI,CAACU,EAAN,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,OAAO,CAAC2B,WADX,CAHF,eAME,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE7B,KADT;AAEE,IAAA,YAAY,EAAE0B,YAFhB;AAGE,IAAA,UAAU,EAAEH,UAHd;AAIE,IAAA,UAAU,EAAEP,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAeD;;AAED,eAAejB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const [content, setContent] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:4300/api/todo')\n      .then(res => {\n        setContent(res.data);\n        console.log(res.data);\n      })\n  }, [])\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1>What's the Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <div key={content.id} onClick={() => completeTodo(todo.id)}>\n        {content.description}\n      </div>\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}