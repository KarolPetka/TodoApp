{"ast":null,"code":"var _jsxFileName = \"/Users/karolpetka/Desktop/todo-app-frontend/todo-app-frontend/src/components/Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport axios from 'axios';\n\nconst Todo = _ref => {\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  const [content, setContent] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:4300/api/todo').then(res => {\n      setContent(res.data);\n      console.log(res.data);\n    });\n  }, []);\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/React.createElement(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: content.id,\n    onClick: () => completeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, content.description), /*#__PURE__*/React.createElement(\"div\", {\n    key: todo.id,\n    onClick: () => completeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, todo.text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RiCloseCircleLine, {\n    onClick: () => removeTodo(todo.id),\n    className: \"delete-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TiEdit, {\n    onClick: () => setEdit({\n      id: todo.id,\n      value: todo.text\n    }),\n    className: \"edit-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/karolpetka/Desktop/todo-app-frontend/todo-app-frontend/src/components/Todo.js"],"names":["React","useState","useEffect","TodoForm","RiCloseCircleLine","TiEdit","axios","Todo","todos","completeTodo","removeTodo","updateTodo","content","setContent","get","then","res","data","console","log","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","description","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nimport axios from 'axios';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [content, setContent] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:4300/api/todo')\n      .then(res => {\n        setContent(res.data);\n        console.log(res.data);\n      })\n  }, [])\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index} >\n      <div key={content.id} onClick={() => completeTodo(todo.id)}>\n        {content.description}\n      </div>\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}